<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xtimer</title>
  <subtitle>Pain past is pleasure</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xtimer.org/"/>
  <updated>2018-05-24T06:22:42.779Z</updated>
  <id>http://xtimer.org/</id>
  
  <author>
    <name>Xiaxiaoyu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CEF中文教程</title>
    <link href="http://xtimer.org/2018/05/23/CEF%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/"/>
    <id>http://xtimer.org/2018/05/23/CEF中文教程/</id>
    <published>2018-05-23T03:35:14.000Z</published>
    <updated>2018-05-24T06:22:42.779Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><a href="#cef中文教程">CEF中文教程</a><ul>
<li><a href="#介绍">介绍</a></li>
<li><a href="#开始">开始</a><ul>
<li><a href="#加载自定义url">加载自定义URL</a></li>
</ul>
</li>
<li><a href="#应用组件">应用组件</a></li>
<li><a href="#1分钟了解架构">1分钟了解架构</a></li>
<li><a href="#源码">源码</a></li>
<li><a href="#入口函数">入口函数</a></li>
<li><a href="#simpleapp类">SimpleApp类</a></li>
<li><a href="#simplehandler类">SimpleHandler类</a></li>
<li><a href="#编译步骤">编译步骤</a><ul>
<li><a href="#基于cmake的通用平台编译步骤">基于CMake的通用平台编译步骤</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>本教程翻译自<a href="https://bitbucket.org/chromiumembedded/cef/wiki/Tutorial" target="_blank" rel="external">CEF官方文档</a></p>
<h1 id="CEF中文教程"><a href="#CEF中文教程" class="headerlink" title="CEF中文教程"></a>CEF中文教程</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本教程详细解释了，如何通过CEF3创建一个简单的应用程序。本教程中的示例程序引用的是CEF项目中的<a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/?at=master" target="_blank" rel="external">cefsimple示例程序</a>。访问<a href="https://bitbucket.org/chromiumembedded/cef/wiki/GeneralUsage.md" target="_blank" rel="external">GeneralUsage</a>可以获取更多有关CEF的信息。</p>
<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>CEF提供了一个非常易于开始的示例程序, 可以访问<a href="https://bitbucket.org/chromiumembedded/cef-project" target="_blank" rel="external">cef-project</a>查阅相关文档。本教程中使用的示例程序以及CEF3程序来自于CEF项目的主线分支，可能与发布版本略有不同。</p>
<h3 id="加载自定义URL"><a href="#加载自定义URL" class="headerlink" title="加载自定义URL"></a>加载自定义URL</h3><p>cefsimple程序默认加载的网址是 google.com, 可以通过命令行指定参数的方式加载不同的URL。  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Load the local file “c:\example\example.html”</div><div class="line">cefsimple.exe --url=file://c:/example/example.html</div></pre></td></tr></table></figure>
<a id="more"></a>  
<p>也可以直接修改cefsimple程序源码来加载指定的URL，源码位置在<a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/simple_app.cc?at=master" target="_blank" rel="external">cefsimple/simple_app.cc</a>  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// Load the local file “c:\example\example.html”</div><div class="line">…</div><div class="line">if (url.empty())</div><div class="line">    url = &quot;file://c:/example/example.html&quot;;</div><div class="line">…</div></pre></td></tr></table></figure>
<h2 id="应用组件"><a href="#应用组件" class="headerlink" title="应用组件"></a>应用组件</h2><p>所有的CEF程序拥有以下几个主要的组件：  </p>
<ul>
<li>CEF动态链接库(Windows下是libcef.dll, Linux是 libcef.so, OS X是Chromium Embedded Framework.framework)</li>
<li>支持文件(<em>.pak </em>.bin等等)</li>
<li>资源文件(html/js/css等等)</li>
<li>可执行文件(例如示例程序中的cefsimple.exe)</li>
</ul>
<p>这些组件在所有基于CEF开发的程序中都是有的，不管是在调试版本或者是发布版本中。可以查看CEF发布版本中的README.txt, 了解哪些组件是必须的，哪些组件是可选的。下文将详细介绍每个平台的程序布局。</p>
<h2 id="1分钟了解架构"><a href="#1分钟了解架构" class="headerlink" title="1分钟了解架构"></a>1分钟了解架构</h2><p>下面列出了本教程中最重要的几项内容：</p>
<ul>
<li>CEF是基于多进程的。主进程称为浏览器进程， 其他子进程则用于渲染、插件、GPU等等。</li>
<li>Windows和Linux上主进程和子进程可以在同一个可执行程序中，而在OS X中主进程和子进程在不同的可执行文件中</li>
<li>CEF的大部分进程都是多线程的。CEF为不同线程的通信提供了接口</li>
<li>有些回调和函数都只能用在特定的进程或者线程中。在使用前，一定要阅读API文档以及接口的注释。</li>
</ul>
<p>这个<a href="https://bitbucket.org/chromiumembedded/cef/wiki/GeneralUsage.md" target="_blank" rel="external">Wiki</a>中可以查看有关以上几点更详细的解释</p>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>cefsimple程序中初始化CEF以及创建了一个弹出式的浏览器窗口。所有的浏览器窗口关闭时， 程序终止。<br>程序流程如下：</p>
<ul>
<li>操作系统首先执行主进程中的入口函数（main或者是wWinMain）</li>
<li>入口函数中<ul>
<li>创建处理进程级别回调函数的SimpleAPP实例</li>
<li>初始化CEF并启动CEF消息处理循环</li>
</ul>
</li>
<li>CEF初始化完成后，调用SimpleApp::OnContextInitialized().该函数<ul>
<li>创建SimpleHandler的单例</li>
<li>通过CefBrowserHost::CreateBrowser()创建一个浏览器窗口</li>
<li>所有的浏览器窗口共享SimpleHandler实例，该实例负责自定义浏览器窗口以及处理浏览器相关回调事件，包括浏览器生命周期、加载状态、标题显示等等</li>
<li>浏览器窗口关闭时，回调函数SimpleHandler::OnBeforeClose()会被调用。当所有浏览器窗口退出后，回调函数OnBeforeClose 接着被调用，然后退出CEF的消息循环，退出程序。</li>
</ul>
</li>
</ul>
<p>最新的CEF发布版本中，可能文件有更新，但是上面的这些概念是不会修改的。</p>
<h2 id="入口函数"><a href="#入口函数" class="headerlink" title="入口函数"></a>入口函数</h2><p>程序执行是从浏览器进程中的入口函数开始的。入口函数中负责初始化CEF以及操作系统相关的对象。<br>例如，在LINUX中，入口函数中初始化了X11相关的错误处理函数，而在OS X中则初始化了必须的cocoa对象。另外的OSX 中，浏览器进程和其他辅助进程都有独立的入口函数。</p>
<ul>
<li>Windows平台的入口函数文件<a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/cefsimple_win.cc?at=master" target="_blank" rel="external">cefsimple/cefsimple_win.cc</a></li>
<li>LINUX平台下的入口函数文件<a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/cefsimple_linux.cc?at=master" target="_blank" rel="external">cefsimple/cefsimple_linux.cc</a></li>
<li>MAC OSX平台下<ul>
<li>浏览器进程入口函数文件<a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/cefsimple_mac.mm?at=master" target="_blank" rel="external">cefsimple/cefsimple_mac.mm</a></li>
<li>其他子进程<a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/process_helper_mac.cc?at=master" target="_blank" rel="external">cefsimple/process_helper_mac.cc</a></li>
</ul>
</li>
</ul>
<h2 id="SimpleApp类"><a href="#SimpleApp类" class="headerlink" title="SimpleApp类"></a>SimpleApp类</h2><p>SimpleApp主要负责进程级别的回调处理。SimpleApp中有一部分公共接口和函数可共享用于所有进程中，也有一些接口和函数只能用于特定的进程中。CefBrowserProcessHandler 仅在浏览器进程中使用。CefRenderProcessHandler 仅能在渲染进程中使用。需要注意的是，GetBrowserProcessHandler必须返回this指针，因为SimpleApp 实现了CefApp 和 CefBrowserProcessHandler.可以访问<a href="https://bitbucket.org/chromiumembedded/cef/wiki/GeneralUsage.md" target="_blank" rel="external"> GeneralUsage </a>查阅更多信息</p>
<ul>
<li>代码位置: <a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/simple_app.h?at=master" target="_blank" rel="external">cefsimple/simple_app.h</a>, <a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/simple_app.cc?at=master" target="_blank" rel="external">cefsimple/simple_app.cc</a></li>
</ul>
<h2 id="SimpleHandler类"><a href="#SimpleHandler类" class="headerlink" title="SimpleHandler类"></a>SimpleHandler类</h2><p>SimpleApp主要负责浏览器级别的回调处理。这些回调只会在浏览器进程中触发。示例程序中，我们使用了同样的cefclient，但是实际开发过程中可以使用不同的cefclient。可以访问<a href="https://bitbucket.org/chromiumembedded/cef/wiki/GeneralUsage.md" target="_blank" rel="external">GeneralUsage</a>查看更多相关信息。</p>
<ul>
<li>跨平台实现: <a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/simple_handler.h?at=master" target="_blank" rel="external">cefsimple/simple_handler.h</a>, <a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/simple_handler.cc?at=master" target="_blank" rel="external">cefsimple/simple_handler.cc</a></li>
<li>Windows 平台实现: <a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/simple_handler_win.cc?at=master" target="_blank" rel="external">cefsimple/simple_handler_win.cc</a></li>
<li>Linux 平台实现: <a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/simple_handler_linux.cc?at=master" target="_blank" rel="external">cefsimple/simple_handler_linux.cc</a></li>
<li>Mac OS X 平台实现:<a href="https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/simple_handler_mac.mm?at=master" target="_blank" rel="external">] cefsimple/simple_handler_mac.mm</a></li>
</ul>
<h2 id="编译步骤"><a href="#编译步骤" class="headerlink" title="编译步骤"></a>编译步骤</h2><p>编译步骤在不同平台上略有不同。可以查看CMake文件详细了解不同平台下的编译流程。<br>所有平台下的编译步骤可以总结为以下几点：</p>
<ul>
<li>编译libcef_dll_wrapper 静态库</li>
<li>编译程序源码，链接到libcef 动态库和libcef_dll_wrapper 静态库</li>
<li>拷贝资源和库文件到输出目录</li>
</ul>
<h3 id="基于CMake的通用平台编译步骤"><a href="#基于CMake的通用平台编译步骤" class="headerlink" title="基于CMake的通用平台编译步骤"></a>基于CMake的通用平台编译步骤</h3><ul>
<li>安装不同平台下的编译工具链（例如windows 下的visual， mac osx下的xcode， linux下的g++等等，建议安装最新版本）</li>
<li>源码目录创建build目录（mkdir build）</li>
<li>进入build目录，执行cmake命令，-G 参数指定平台（例如 mac osx 下cmake -G “Xcode” .. ）</li>
<li>生成makefile文件后，执行make命令 编译指定模块或者全部模块 (例如 make all; make cefsimple)</li>
<li>各个平台下稍有不同，编译问题大部分都是库不完整，编译工具链不完整，或者路径不正确，官网的源码本身没有问题，各个平台下都能编译通过。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#cef中文教程&quot;&gt;CEF中文教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#介绍&quot;&gt;介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#开始&quot;&gt;开始&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#加载自定义url&quot;&gt;加载自定义URL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#应用组件&quot;&gt;应用组件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#1分钟了解架构&quot;&gt;1分钟了解架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#源码&quot;&gt;源码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#入口函数&quot;&gt;入口函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#simpleapp类&quot;&gt;SimpleApp类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#simplehandler类&quot;&gt;SimpleHandler类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#编译步骤&quot;&gt;编译步骤&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#基于cmake的通用平台编译步骤&quot;&gt;基于CMake的通用平台编译步骤&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本教程翻译自&lt;a href=&quot;https://bitbucket.org/chromiumembedded/cef/wiki/Tutorial&quot;&gt;CEF官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;CEF中文教程&quot;&gt;&lt;a href=&quot;#CEF中文教程&quot; class=&quot;headerlink&quot; title=&quot;CEF中文教程&quot;&gt;&lt;/a&gt;CEF中文教程&lt;/h1&gt;&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;本教程详细解释了，如何通过CEF3创建一个简单的应用程序。本教程中的示例程序引用的是CEF项目中的&lt;a href=&quot;https://bitbucket.org/chromiumembedded/cef/src/master/tests/cefsimple/?at=master&quot;&gt;cefsimple示例程序&lt;/a&gt;。访问&lt;a href=&quot;https://bitbucket.org/chromiumembedded/cef/wiki/GeneralUsage.md&quot;&gt;GeneralUsage&lt;/a&gt;可以获取更多有关CEF的信息。&lt;/p&gt;
&lt;h2 id=&quot;开始&quot;&gt;&lt;a href=&quot;#开始&quot; class=&quot;headerlink&quot; title=&quot;开始&quot;&gt;&lt;/a&gt;开始&lt;/h2&gt;&lt;p&gt;CEF提供了一个非常易于开始的示例程序, 可以访问&lt;a href=&quot;https://bitbucket.org/chromiumembedded/cef-project&quot;&gt;cef-project&lt;/a&gt;查阅相关文档。本教程中使用的示例程序以及CEF3程序来自于CEF项目的主线分支，可能与发布版本略有不同。&lt;/p&gt;
&lt;h3 id=&quot;加载自定义URL&quot;&gt;&lt;a href=&quot;#加载自定义URL&quot; class=&quot;headerlink&quot; title=&quot;加载自定义URL&quot;&gt;&lt;/a&gt;加载自定义URL&lt;/h3&gt;&lt;p&gt;cefsimple程序默认加载的网址是 google.com, 可以通过命令行指定参数的方式加载不同的URL。  &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# Load the local file “c:\example\example.html”&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cefsimple.exe --url=file://c:/example/example.html&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="CEF" scheme="http://xtimer.org/tags/CEF/"/>
    
      <category term="Chrome" scheme="http://xtimer.org/tags/Chrome/"/>
    
      <category term="Blink" scheme="http://xtimer.org/tags/Blink/"/>
    
  </entry>
  
  <entry>
    <title>通过CloudFlare配置Github Pages HTTPS访问</title>
    <link href="http://xtimer.org/2017/02/24/%E9%80%9A%E8%BF%87CloudFlare%E9%85%8D%E7%BD%AEGithub-Pages-HTTPS%E8%AE%BF%E9%97%AE/"/>
    <id>http://xtimer.org/2017/02/24/通过CloudFlare配置Github-Pages-HTTPS访问/</id>
    <published>2017-02-24T05:13:45.000Z</published>
    <updated>2017-02-24T05:43:16.983Z</updated>
    
    <content type="html"><![CDATA[<p><code>本文假设已经配置好GitHub Pages,并且已经配置好Custom Domain</code><br>有关Github Pages的配置，请参考 <a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a>  </p>
<h2 id="DNS设置"><a href="#DNS设置" class="headerlink" title="DNS设置"></a>DNS设置</h2><h3 id="将自定义域名的domain-name-servers-切换至CloudFlare"><a href="#将自定义域名的domain-name-servers-切换至CloudFlare" class="headerlink" title="将自定义域名的domain name servers 切换至CloudFlare."></a>将自定义域名的domain name servers 切换至CloudFlare.</h3><p><img src="https://support.cloudflare.com/hc/en-us/article_attachments/205348367/find-namesevers.png" alt="namserver"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">elle.ns.cloudflare.com</div><div class="line">rick.ns.cloudflare.com</div></pre></td></tr></table></figure></p>
<p>自定义域名的相关DNS记录迁移到切换至CloudFlare.<br>一般情况下，几分钟后即能生效.<br><img src="https://support.cloudflare.com/hc/en-us/article_attachments/205331408/status-active.png" alt="dns"><br><a id="more"></a></p>
<h2 id="SSL设置"><a href="#SSL设置" class="headerlink" title="SSL设置"></a>SSL设置</h2><h3 id="进入CloudFlare控制台-选择Crypto-菜单"><a href="#进入CloudFlare控制台-选择Crypto-菜单" class="headerlink" title="进入CloudFlare控制台, 选择Crypto 菜单"></a>进入CloudFlare控制台, 选择Crypto 菜单</h3><p>将SSL模式切换至Full<br><img src="https://blog.cloudflare.com/content/images/2016/06/T08btVu.png" alt="ssl"><br>此操作需要等待较长的时间，请耐心等待。<br>查看控制台状态，检查如果是Active Certificate，则是已经生效。</p>
<h2 id="Page-Rule"><a href="#Page-Rule" class="headerlink" title="Page Rule"></a>Page Rule</h2><h3 id="设置Page-Rule，-强制http访问转至HTTPS访问"><a href="#设置Page-Rule，-强制http访问转至HTTPS访问" class="headerlink" title="设置Page Rule， 强制http访问转至HTTPS访问"></a>设置Page Rule， 强制http访问转至HTTPS访问</h3><p><img src="https://blog.cloudflare.com/content/images/2016/06/always_use_https_page_rule.png" alt="page"></p>
<p>至此，通过CloudFlare 的SSL配置达到github pages的https访问支持。<br>例如: <a href="https://xtimer.org">xtimer.org</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;本文假设已经配置好GitHub Pages,并且已经配置好Custom Domain&lt;/code&gt;&lt;br&gt;有关Github Pages的配置，请参考 &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt;  &lt;/p&gt;
&lt;h2 id=&quot;DNS设置&quot;&gt;&lt;a href=&quot;#DNS设置&quot; class=&quot;headerlink&quot; title=&quot;DNS设置&quot;&gt;&lt;/a&gt;DNS设置&lt;/h2&gt;&lt;h3 id=&quot;将自定义域名的domain-name-servers-切换至CloudFlare&quot;&gt;&lt;a href=&quot;#将自定义域名的domain-name-servers-切换至CloudFlare&quot; class=&quot;headerlink&quot; title=&quot;将自定义域名的domain name servers 切换至CloudFlare.&quot;&gt;&lt;/a&gt;将自定义域名的domain name servers 切换至CloudFlare.&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://support.cloudflare.com/hc/en-us/article_attachments/205348367/find-namesevers.png&quot; alt=&quot;namserver&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;elle.ns.cloudflare.com&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;rick.ns.cloudflare.com&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;自定义域名的相关DNS记录迁移到切换至CloudFlare.&lt;br&gt;一般情况下，几分钟后即能生效.&lt;br&gt;&lt;img src=&quot;https://support.cloudflare.com/hc/en-us/article_attachments/205331408/status-active.png&quot; alt=&quot;dns&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="website" scheme="http://xtimer.org/categories/website/"/>
    
    
      <category term="Github" scheme="http://xtimer.org/tags/Github/"/>
    
      <category term="Pages" scheme="http://xtimer.org/tags/Pages/"/>
    
      <category term="HTTPS" scheme="http://xtimer.org/tags/HTTPS/"/>
    
      <category term="SSL" scheme="http://xtimer.org/tags/SSL/"/>
    
      <category term="CloudFlare" scheme="http://xtimer.org/tags/CloudFlare/"/>
    
  </entry>
  
  <entry>
    <title>Atom And Plugins</title>
    <link href="http://xtimer.org/2017/02/22/Atom-and-plugins/"/>
    <id>http://xtimer.org/2017/02/22/Atom-and-plugins/</id>
    <published>2017-02-22T03:35:14.000Z</published>
    <updated>2017-02-24T01:12:00.538Z</updated>
    
    <content type="html"><![CDATA[<!-- toc orderedList:0 depthFrom:1 depthTo:6 -->
<ul>
<li><a href="#系统环境">系统环境</a></li>
<li><a href="#atom安装">Atom安装</a></li>
<li><a href="#插件2017-02-24更新">插件(2017-02-24更新)</a><ul>
<li><a href="#autocomplete-python">autocomplete-python</a></li>
<li><a href="#tortoise-svn">tortoise-svn</a></li>
<li><a href="#simplified-chinese-menu">simplified-chinese-menu</a></li>
<li><a href="#svn">svn</a></li>
<li><a href="#minimap">minimap</a></li>
<li><a href="#markdown-preview-enhanced">markdown-preview-enhanced</a></li>
<li><a href="#regex-railroad-diagram">regex-railroad-diagram</a></li>
<li><a href="#remote-sync">remote-sync</a></li>
<li><a href="#atom-hexo">atom-hexo</a></li>
<li><a href="#file-icons">file-icons</a></li>
<li><a href="#markdown-writer">markdown-writer</a></li>
</ul>
</li>
</ul>
<!-- tocstop -->
<p>轻量IDE环境全面由Sublime Text2 转向Atom。<br>简单记录下Atom安装过程以及使用的插件。  </p>
<h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><p>  Windows 7 x64</p>
<h2 id="Atom安装"><a href="#Atom安装" class="headerlink" title="Atom安装"></a>Atom安装</h2><p><a href="https://atom.io" target="_blank" rel="external">Atom</a><br><img src="/images/2017/02/atom_install_1.png" alt="Atom"><br><a id="more"></a><br>选择<code>Other platforms</code><br><img src="/images/2017/02/atom_install_2.png" alt="Atom"><br>选择windows x64平台下的zip包<br>解压到任意目录，打开atom.exe 即可使用</p>
<h2 id="插件-2017-02-24更新"><a href="#插件-2017-02-24更新" class="headerlink" title="插件(2017-02-24更新)"></a>插件(2017-02-24更新)</h2><h3 id="autocomplete-python"><a href="#autocomplete-python" class="headerlink" title="autocomplete-python"></a>autocomplete-python</h3><p>Python completions for packages, variables, methods, functions, with their arguments. Powered by your choice of Jedi or Kite.<br><img src="https://i.github-camo.com/9cb3e21999f92079ca5393b718784f81be458afa/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f3139333836342f31323238383432372f36316665323131342d626130662d313165352d393833322d3938383639313830643837662e676966" alt="python"></p>
<h3 id="tortoise-svn"><a href="#tortoise-svn" class="headerlink" title="tortoise-svn"></a>tortoise-svn</h3><p>An Atom Plugin for users of TortoiseSvn for Windows<br><img src="/images/2017/02/atom_plugin_1.png" alt="tsvn"></p>
<h3 id="simplified-chinese-menu"><a href="#simplified-chinese-menu" class="headerlink" title="simplified-chinese-menu"></a>simplified-chinese-menu</h3><p>Atom 的简体中文语言包，完整汉化，兼容所有已发布版本 Atom<br><img src="https://i.github-camo.com/310974644fa82b356fd6a84fac26e4629743bcc8/68747470733a2f2f6769746875622e636f6d2f6368696e616b6964732f61746f6d2d6368696e6573652d6d656e752f7261772f6d61737465722f73637265656e73686f742f73637265656e73686f74342e706e67" alt="simplified-chinese-menu"></p>
<h3 id="svn"><a href="#svn" class="headerlink" title="svn"></a>svn</h3><p>Marks lines/files in the editor gutter/treeview that have been added, edited, or deleted since the last commit.</p>
<h3 id="minimap"><a href="#minimap" class="headerlink" title="minimap"></a>minimap</h3><p>A preview of the full source code.<br><img src="https://i.github-camo.com/c26ef0defaf081ebd5ddfd730a1d914e9dfa3a3a/68747470733a2f2f6769746875622e636f6d2f61746f6d2d6d696e696d61702f6d696e696d61702f626c6f622f6d61737465722f7265736f75726365732f696e646570656e64656e742d7363726f6c6c2e6769663f7261773d74727565" alt="minimap"></p>
<h3 id="markdown-preview-enhanced"><a href="#markdown-preview-enhanced" class="headerlink" title="markdown-preview-enhanced"></a>markdown-preview-enhanced</h3><p>One of the ‘BEST’ markdown preview extensions for Atom editor!<br><img src="https://cloud.githubusercontent.com/assets/1908863/22763072/32f09e80-ee28-11e6-9d42-c3953f5749a1.gif" alt="markdown-preview-enhanced"></p>
<h3 id="regex-railroad-diagram"><a href="#regex-railroad-diagram" class="headerlink" title="regex-railroad-diagram"></a>regex-railroad-diagram</h3><p>Display railroad diagram of regex under cursor.<br><img src="https://i.github-camo.com/8466434b7e61870e51dbee19b0bc1173846e7a89/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6b6c6f72656e7a2f61746f6d2d72656765782d7261696c726f61642d6469616772616d732f333535323636373232386331393265383161306432653538343365383234633036346238653462392f72656765782d7261696c726f61642d6469616772616d732e706e67" alt="regex-railroad-diagram"></p>
<h3 id="remote-sync"><a href="#remote-sync" class="headerlink" title="remote-sync"></a>remote-sync</h3><p>Upload your files to remote host after every change. Both SCP/SFTP and FTP are supported.</p>
<h3 id="atom-hexo"><a href="#atom-hexo" class="headerlink" title="atom-hexo"></a>atom-hexo</h3><p>Hexo for the Atom Editor.</p>
<h3 id="file-icons"><a href="#file-icons" class="headerlink" title="file-icons"></a>file-icons</h3><p>Assign file extension icons and colours for improved visual grepping<br><img src="https://i.github-camo.com/fb720dc73a9cf634fef9b11e87f0cd194284e3be/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f66696c652d69636f6e732f61746f6d2f363731343730366632363865323537313030653033633965623532383139636239376164353730622f707265766965772e706e67" alt="file-icons"></p>
<h3 id="markdown-writer"><a href="#markdown-writer" class="headerlink" title="markdown-writer"></a>markdown-writer</h3><p>Make Atom a better Markdown editor and an easier static blogging tool.<br><img src="https://i.github-camo.com/216ebba971ab38d17d6eabdaf236d042a55b35b8/687474703a2f2f692e696d6775722e636f6d2f7339656b4d6e732e676966" alt="markdown-writer"></p>
]]></content>
    
    <summary type="html">
    
      &lt;!-- toc orderedList:0 depthFrom:1 depthTo:6 --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#系统环境&quot;&gt;系统环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#atom安装&quot;&gt;Atom安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#插件2017-02-24更新&quot;&gt;插件(2017-02-24更新)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#autocomplete-python&quot;&gt;autocomplete-python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#tortoise-svn&quot;&gt;tortoise-svn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#simplified-chinese-menu&quot;&gt;simplified-chinese-menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#svn&quot;&gt;svn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#minimap&quot;&gt;minimap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#markdown-preview-enhanced&quot;&gt;markdown-preview-enhanced&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#regex-railroad-diagram&quot;&gt;regex-railroad-diagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#remote-sync&quot;&gt;remote-sync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#atom-hexo&quot;&gt;atom-hexo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#file-icons&quot;&gt;file-icons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#markdown-writer&quot;&gt;markdown-writer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;p&gt;轻量IDE环境全面由Sublime Text2 转向Atom。&lt;br&gt;简单记录下Atom安装过程以及使用的插件。  &lt;/p&gt;
&lt;h2 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; class=&quot;headerlink&quot; title=&quot;系统环境&quot;&gt;&lt;/a&gt;系统环境&lt;/h2&gt;&lt;p&gt;  Windows 7 x64&lt;/p&gt;
&lt;h2 id=&quot;Atom安装&quot;&gt;&lt;a href=&quot;#Atom安装&quot; class=&quot;headerlink&quot; title=&quot;Atom安装&quot;&gt;&lt;/a&gt;Atom安装&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://atom.io&quot;&gt;Atom&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;/images/2017/02/atom_install_1.png&quot; alt=&quot;Atom&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Atom" scheme="http://xtimer.org/tags/Atom/"/>
    
      <category term="Plugin" scheme="http://xtimer.org/tags/Plugin/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://xtimer.org/2017/02/20/hello-world/"/>
    <id>http://xtimer.org/2017/02/20/hello-world/</id>
    <published>2017-02-20T07:21:33.057Z</published>
    <updated>2017-02-20T07:21:33.057Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
